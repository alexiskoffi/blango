[{"model": "blog.comment", "pk": 2, "fields": {"creator": 1, "content": "I like myself!", "content_type": 4, "object_id": 1, "created_at": "2022-01-19T13:03:52.178Z", "modified_at": "2022-01-19T13:03:52.192Z"}}, {"model": "blog.comment", "pk": 3, "fields": {"creator": 1, "content": "Because it relies on html5lib, Bleach is as good as modern browsers at dealing with weird, quirky HTML fragments. And any of Bleach’s methods will fix unbalanced or mis-nested tags.", "content_type": 7, "object_id": 1, "created_at": "2022-01-21T12:46:19.772Z", "modified_at": "2022-01-21T12:46:19.772Z"}}, {"model": "blog.comment", "pk": 4, "fields": {"creator": 1, "content": "If you believe that you’ve found a security vulnerability, please file a secure bug report in our bug tracker or send an email to security AT mozilla DOT org.", "content_type": 7, "object_id": 2, "created_at": "2022-01-21T12:46:45.768Z", "modified_at": "2022-01-21T12:46:45.768Z"}}, {"model": "blog.comment", "pk": 5, "fields": {"creator": 1, "content": "Hello there with the comment section", "content_type": 7, "object_id": 7, "created_at": "2022-01-21T13:01:17.465Z", "modified_at": "2022-01-21T13:01:17.465Z"}}, {"model": "blog.comment", "pk": 6, "fields": {"creator": 1, "content": "Adding comment to check logger infos", "content_type": 7, "object_id": 1, "created_at": "2022-01-22T16:01:09.047Z", "modified_at": "2022-01-22T16:01:09.047Z"}}, {"model": "blog.comment", "pk": 7, "fields": {"creator": 1, "content": "Test for verbose logger info", "content_type": 7, "object_id": 5, "created_at": "2022-01-22T16:14:25.841Z", "modified_at": "2022-01-22T16:14:25.841Z"}}, {"model": "blog.tag", "pk": 1, "fields": {"value": "django"}}, {"model": "blog.tag", "pk": 2, "fields": {"value": "post"}}, {"model": "blog.tag", "pk": 3, "fields": {"value": "example"}}, {"model": "blog.tag", "pk": 4, "fields": {"value": "codia"}}, {"model": "blog.post", "pk": 1, "fields": {"author": 1, "created_at": "2022-01-19T01:24:26.201Z", "modified_at": "2022-01-19T20:38:31.095Z", "published_at": "2022-01-02T20:38:24Z", "title": "An example post", "slug": "an-example-post", "summary": "A short example post", "content": "<h3>An example post!</h3>\r\n<p>This is an example post that uses HTML to render itself.</p>", "tags": [1, 2, 3, 4]}}, {"model": "blog.post", "pk": 2, "fields": {"author": 1, "created_at": "2022-01-19T20:40:04.275Z", "modified_at": "2022-01-19T20:40:04.275Z", "published_at": "2022-01-07T20:38:39Z", "title": "Advanced Django: A Review", "slug": "advanced-django-a-review", "summary": "An advanced django course", "content": "<p>This great course is a must-do for anyone to take the next Django step</p>", "tags": [1, 2]}}, {"model": "blog.post", "pk": 3, "fields": {"author": 2, "created_at": "2022-01-19T21:41:27.928Z", "modified_at": "2022-01-19T21:41:27.928Z", "published_at": "2022-01-02T21:40:59Z", "title": "Title content", "slug": "title-content", "summary": "Summary content", "content": "Content for the blog", "tags": [3]}}, {"model": "blog.post", "pk": 4, "fields": {"author": 2, "created_at": "2022-01-21T11:26:09.513Z", "modified_at": "2022-01-21T11:26:09.513Z", "published_at": "2022-01-21T11:25:44Z", "title": "Inclusion Tags", "slug": "inclusion-tags", "summary": "The current post", "content": "As with a simple tag, we can also pass the context to the inclusion tag function", "tags": [4]}}, {"model": "blog.post", "pk": 5, "fields": {"author": 1, "created_at": "2022-01-21T11:27:06.145Z", "modified_at": "2022-01-21T11:27:06.145Z", "published_at": "2022-01-03T11:26:18Z", "title": "A brief look at", "slug": "a-brief-look-at", "summary": "Summary a brief look at", "content": "As with a simple tag, we can also pass the context to the inclusion tag function, by adding a context argument and adding takes_context=True to the decorator call.", "tags": [3]}}, {"model": "blog.post", "pk": 6, "fields": {"author": 1, "created_at": "2022-01-21T11:27:55.929Z", "modified_at": "2022-01-21T11:27:55.929Z", "published_at": "2022-01-05T11:27:16Z", "title": "Bleach", "slug": "bleach", "summary": "Bleach is an allowed-list-based HTML sanitizing library that escapes or strips markup and attributes.", "content": "Bleach can also linkify text safely, applying filters that Django’s urlize filter cannot, and optionally setting rel attributes, even on links already in the text.\r\n\r\nBleach is intended for sanitizing text from untrusted sources. If you find yourself jumping through hoops to allow your site administrators to do lots of things, you’re probably outside the use cases. Either trust those users, or don’t.", "tags": [1]}}, {"model": "blog.post", "pk": 7, "fields": {"author": 1, "created_at": "2022-01-21T11:28:37.596Z", "modified_at": "2022-01-21T11:28:37.596Z", "published_at": "2022-01-19T11:28:12Z", "title": "Project 1", "slug": "project-1", "summary": "What to Do", "content": "If you did not turn in all CS50W assignments prior to 1 July 2020 (or ultimately did not receive a passing grade (1/1) on any of them for any reason), you must complete this project, even if you were “further ahead” in CS50W than this point. This project has no equivalent in the old version of CS50W.", "tags": [3]}}, {"model": "blango_auth.User", "pk": 1, "fields": {"password": "argon2$argon2id$v=19$m=102400,t=2,p=8$ZVlzQVMyVTkwR2l2dHFJc0tCYVpzNw$BmSpNSVv8k1vjyoyDYzXoQ", "last_login": "2022-01-22T18:27:02.413Z", "is_superuser": true, "username": "codio", "first_name": "Codio", "last_name": "Coursera", "email": "codio@example.com", "is_staff": true, "is_active": true, "date_joined": "2022-01-19T00:59:48Z", "groups": [], "user_permissions": []}}, {"model": "blango_auth.User", "pk": 2, "fields": {"password": "pbkdf2_sha256$260000$4lcuSO1hEEHbGqp8Bboqmo$0PvSJ3e/nCxeuCmKz82NwSqZA+u+th7+HKU7bQnc2Kw=", "last_login": null, "is_superuser": false, "username": "test", "first_name": "TestFirst", "last_name": "TestLast", "email": "", "is_staff": false, "is_active": true, "date_joined": "2022-01-19T21:40:20Z", "groups": [], "user_permissions": []}}]